swagger: "2.0"
info:
  description: ubectl and tools for Direktiv.
  title: kubetcl
  version: "1.0"
  x-direktiv-meta:
    container: gcr.io/direktiv/functions/kubetcl
    maintainer: |-
      [direktiv.io](https://www.direktiv.io) 
    issues: https://github.com/direktiv-apps/kubetcl/issues
    url: https://github.com/direktiv-apps/kubetcl  
    categories:
    - unknown
    license: |-
      [Apache-2.0](https://www.apache.org/licenses/LICENSE-2.0)
    long-description: >-
      This function provides kubectl, kustomize and helm. There following tools are installed:


      - kubectl v1.26.1

      - helm v3.11.1

      - curl

      - wget 

      - git


      The required kubeconfig has to be provided as base64 encoded file.
consumes:
- application/json
produces:
- application/json
schemes:
- http
paths:
  /: 
    delete:
      parameters:
        - name: Direktiv-ActionID
          in: header
          type: string
          description: |
            On cancel Direktiv sends a DELETE request to
            the action with id in the header
      x-direktiv:
        cancel: echo 'cancel {{ .DirektivActionID }}'
      responses:
        200:
    post:
      parameters:
        - name: Direktiv-ActionID
          in: header
          type: string
          default: development
          description: |
            direktiv action id is an UUID. 
            For development it can be set to 'development'
        - name: Direktiv-TempDir
          in: header
          type: string
          default: /tmp
          description: |
            direktiv temp dir is the working directory for that request
            For development it can be set to e.g. '/tmp'
        - name: body
          in: body
          schema:
            type: object
            properties:
              files:
                type: array
                items:
                  $ref: '#/definitions/direktivFile'
                description: File to create before running commands.
                default: []
              kubeconfig:
                type: string
                description: kubeconfig as base64 encoded file
              commands:
                type: array
                description: Array of commands.
                items:
                  type: object
                  properties:
                    command:
                      type: string
                      description: Command to run
                    silent: 
                      type: boolean
                      description: If set to false the command will not print output to logs.
                      default: false
                    print: 
                      type: boolean
                      description: If set to false the command will not print the full command with arguments to logs.
                      default: true
                    continue: 
                      type: boolean
                      description: Stops excecution if command fails, otherwise proceeds with next command 
                default: 
                - command: kubectl version
      # direktiv code generation is configured here
      x-direktiv-function: |-
        functions:
        - id: kubetcl
          image: gcr.io/direktiv/functions/kubetcl:1.0
          type: knative-workflow
      x-direktiv-examples:
        # ADD MORE EXAMPLES HERE
        - title: Basic
          content: |-
            - id: kubectl
              type: action
              action:
                secrets: ["kubeconfig"]
                function: kubectl
                input: 
                  kubeconfig: jq(.secrets.kubeconfig | @base64)
                  commands:
                  - command: kubectl version --client --output json
        - title: Advanced
          content: |-
            - id: kubectl
              type: action
              action:
                secrets: ["kubeconfig"]
                function: kubectl
                input: 
                  kubeconfig: jq(.secrets.kubeconfig | @base64)
                  commands:
                  - command: kubectl get pods --output json
              catch:
              - error: "*"
      x-direktiv-secrets:
        - name: kubeconfig
          description: Kubeconfig file as BASE64 encoded file for cluster access.
      x-direktiv:  
        cmds:
        - action: exec
          exec: bash -c 'mkdir -p ~/.kube/ && echo {{ .Kubeconfig }} | base64 -d > ~/.kube/config'
          silent: true
          print: false
        - action: foreach
          loop: .Commands
          exec: '{{ .Item.Command }}'
          silent: '{{ .Item.Silent }}'
          print: '{{ .Item.Print }}'
          continue: '{{ .Item.Continue }}'
        output: |
          {
            "kubectl": {{ index . 1 | toJson }}
          }
      x-direktiv-errors:
        io.direktiv.command.error: Command execution failed
        io.direktiv.output.error: Template error for output generation of the service
        io.direktiv.ri.error: Can not create information object from request
      responses:
        200:
          description: List of executed commands.
          examples:
            kubectl:
            - result:
              clientVersion:
                buildDate: '2022-08-23T17:44:59Z'
                compiler: gc
                gitCommit: a866cbe2e5bbaa01cfd5e969aa3e033f3282a8a2
                gitTreeState: clean
                gitVersion: v1.25.0
                goVersion: go1.19
                major: '1'
                minor: '25'
                platform: linux/amd64
              kustomizeVersion: v4.5.7
            success: true
          # schema:
          #   type: object
          #   additionalProperties: {}
          schema:
            type: object
            properties:
              kubectl:
                type: array
                items:
                  type: object
                  required:
                  - success
                  - result
                  properties:
                    success:
                      type: boolean
                    result:
                      additionalProperties: {}
        default:
          description: generic error response
          headers:
            Direktiv-ErrorCode:
              type: string
            Direktiv-ErrorMessage:
              type: string
          schema:
            $ref: "#/definitions/error"
definitions:
  direktivFile:
    type: object
    x-go-type:
      type: DirektivFile
      import:
        package: github.com/direktiv/apps/go/pkg/apps 
  error:
    type: object
    required:
      - errorCode
      - errorMessage
    properties:
      errorCode:
        type: string
      errorMessage:
        type: string
